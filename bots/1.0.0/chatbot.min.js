const phrases={en:{ph:"Type a message...",attach:"Attach a file",send:"Send",close:"Close",maximize:"Maximize",restore:"Restore",file:"File",thinking:"Thinking",minimize:"Minimize"},es:{ph:"Escribe un mensaje...",attach:"Adjuntar un archivo",send:"Enviar",close:"Cerrar",maximize:"Maximizar",restore:"Restaurar",file:"Archivo",thinking:"Pensando",minimize:"Minimizar"},fr:{ph:"Tapez un message...",attach:"Attacher un fichier",send:"Envoyer",close:"Fermer",maximize:"Maximiser",restore:"Restaurer",file:"Fichier",thinking:"Penser",minimize:"Minimiser"}};export default class Chatbot{constructor({id:e,assistant:t,server:n,target:i,type:s="bubble",style:o={},config:a={}}){if(this.target=i||document.getElementById("chat-container"),this.id=e,this.type=s,this.assistant=t,!this.assistant)throw new Error("Assistant ID is required");if(this.server=n,!this.server)throw new Error("Server URL is required");if(this.style={color:o.color||"#0078d4",font:o.font||"Arial, sans-serif",bubblePosition:o.bubblePosition||"right",bubbleSize:o.bubbleSize||"60px",chatWidth:o.chatWidth||("embed"===s?"100%":"400px"),chatHeight:o.chatHeight||("embed"===s?"100%":"500px"),secondaryFontColor:o.secondaryFontColor||"white",fontFamily:o.fontFamily||"system",googleFont:o.googleFont||"Inter",fontWeight:o.fontWeight||"400",chatAvatar:o.chatAvatar||null,favicon:o.favicon||null,bubbleIcon:o.bubbleIcon||"ðŸ’¬",bubbleIconImage:o.bubbleIconImage||null,...o},this.config={...a,lang:a.lang||"en",askForCookies:!1!==a.askForCookies,enableCookies:!1!==a.enableCookies,autoSaveSession:!1!==a.autoSaveSession,enableSharing:!1!==a.enableSharing,enableViewHistory:!1!==a.enableViewHistory,maxStoredMessages:a.maxStoredMessages||50,sessionExpiryMinutes:a.sessionExpiryMinutes||720,cookieExpiryMinutes:a.cookieExpiryMinutes||20160},this.phrases={},!this.config.lang||!phrases[this.config.lang])throw new Error("Language not supported");if(this.phrases=phrases[this.config.lang],this.config.placeholder&&(this.phrases.ph=this.config.placeholder),this.isMaximized=!1,this.messages=[],this.files={},this.loadingTimeout=null,this.conversationId=null,this.cookiesEnabled=!1,this.sessionData=null,this.isMobile=this.detectMobile(),!this.target)throw new Error("Target element not found");if(!this.id)throw new Error("Chatbot ID is required");this.injectStyles(),"embed"===this.type?(this.renderEmbed(),this.initializeConversation()):this.renderBubble(),this.loadFontsAndAssets()}loadFontsAndAssets(){"google"===this.style.fontFamily&&this.style.googleFont&&this.loadGoogleFont(this.style.googleFont,this.style.fontWeight),this.style.favicon&&this.setFavicon(this.style.favicon)}loadGoogleFont(e,t){const n=document.createElement("link");n.rel="stylesheet",n.href=`https://fonts.googleapis.com/css2?family=${e}:wght@${t}&display=swap`,document.head.appendChild(n)}setFavicon(e){const t=document.createElement("link");t.rel="icon",t.type="image/x-icon",t.href=e;const n=document.querySelector('link[rel="icon"]');n&&n.remove(),document.head.appendChild(t)}injectStyles(){const e="left"===this.style.bubblePosition?"left":"right";let t=this.style.font;"google"===this.style.fontFamily?t=`"${this.style.googleFont}", sans-serif`:"system"===this.style.fontFamily&&(t=this.style.font);const n=`\n          .chat-bubble {\n            position: fixed;\n            bottom: 20px;\n            ${e}: 20px;\n            width: ${this.style.bubbleSize};\n            height: ${this.style.bubbleSize};\n            background-color: ${this.style.color};\n            border-radius: 50%;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            cursor: pointer;\n            transition: transform 0.2s ease;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-bubble:hover {\n            transform: scale(1.1);\n          }\n          .chat-bubble-icon {\n            font-size: 24px;\n            color: ${this.style.secondaryFontColor};\n          }\n          .chat-bubble-icon-image {\n            width: 32px;\n            height: 32px;\n            object-fit: contain;\n          }\n          .chat-container {\n            position: fixed;\n            bottom: 20px;\n            ${e}: 20px;\n            width: ${this.style.chatWidth};\n            height: ${this.style.chatHeight};\n            background-color: #f5f5f5;\n            display: flex;\n            flex-direction: column;\n            border-radius: 10px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n            z-index: 1000;\n            transition: all 0.3s ease;\n          }\n          .chat-container.maximized {\n            bottom: 2.5%;\n            ${e}: 2.5%;\n            width: 95%;\n            height: 95%;\n            border-radius: 10px;\n          }\n          .chat-container.maximized.mobile {\n            bottom: 0;\n            ${e}: 0;\n            width: 100%;\n            height: 100%;\n            border-radius: 0;\n          }\n          .chat-header {\n            background-color: ${this.style.color};\n            color: ${this.style.secondaryFontColor};\n            padding: 10px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            font-size: 16px;\n            border-radius: 10px 10px 0 0;\n          }\n          .chat-header h3 {\n            margin: 0;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          .chat-avatar {\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            object-fit: cover;\n          }\n          .chat-header p {\n            margin: 0;\n            font-size: 14px;\n            opacity: 0.8;\n          }\n          .chat-header button {\n            background: none;\n            border: none;\n            color: ${this.style.secondaryFontColor};\n            cursor: pointer;\n            font-size: 20px;\n            transition: background-color 0.3s ease;\n            border-radius: 5px;\n          }\n          .chat-header button:hover {\n            background-color: rgba(255, 255, 255, 0.2);\n          }\n          .chat-body {\n            flex: 1;\n            overflow-y: auto;\n            padding: 10px;\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            font-size: 14px;\n            color: #333;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-message {\n            padding: 8px 12px;\n            border-radius: 10px;\n            max-width: 70%;\n            display: flex;\n            align-items: flex-start;\n            gap: 8px;\n          }\n          .chat-message.bot {\n            background-color: ${this.style.color};\n            color: ${this.style.secondaryFontColor};\n            align-self: flex-start;\n          }\n          .chat-message.user {\n            background-color: #e1e1e1;\n            color: black;\n            align-self: flex-end;\n            flex-direction: row-reverse;\n          }\n          .message-avatar {\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            object-fit: cover;\n            flex-shrink: 0;\n          }\n          .message-content {\n            flex: 1;\n          }\n          .chat-input {\n            margin-top: 10px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            padding: 10px;\n          }\n          .chat-input input[type="text"] {\n            flex: 1;\n            padding: 8px;\n            border: 1px solid #ccc;\n            border-radius: 10px;\n            font-size: 14px;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-input button {\n            padding: 8px 16px;\n            background-color: ${this.style.color};\n            color: ${this.style.secondaryFontColor};\n            border: none;\n            border-radius: 10px;\n            cursor: pointer;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-input input[type="file"] {\n            display: none;\n          }\n          .chat-input label {\n            background-color: #e1e1e1;\n            color: black;\n            padding: 8px 12px;\n            border-radius: 10px;\n            cursor: pointer;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-loading {\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            font-size: 14px;\n            color: #777;\n            font-style: italic;\n            opacity: 0.7;\n            font-family: ${t};\n            font-weight: ${this.style.fontWeight};\n          }\n          .chat-loading::after {\n            content: " ";\n            display: inline-block;\n            width: 0.8em;\n            text-align: left;\n            animation: loading-dots 1.5s infinite steps(3, end);\n          }\n\n          @keyframes loading-dots {\n            0% {\n              content: "";\n            }\n            33% {\n              content: ".";\n            }\n            66% {\n              content: "..";\n            }\n            100% {\n              content: "...";\n            }\n          }\n          \n          /* Mobile-specific styles */\n          @media (max-width: 768px) {\n            .chat-bubble {\n              width: 70px;\n              height: 70px;\n              bottom: 15px;\n              ${e}: 15px;\n            }\n            .chat-bubble-icon {\n              font-size: 28px;\n            }\n            .chat-bubble-icon-image {\n              width: 40px;\n              height: 40px;\n            }\n            .chat-container {\n              bottom: 15px;\n              ${e}: 15px;\n              width: calc(100vw - 30px);\n              height: calc(100vh - 30px);\n              max-width: 400px;\n              max-height: 600px;\n            }\n            .chat-header button {\n              font-size: 24px;\n              padding: 8px;\n              min-width: 44px;\n              min-height: 44px;\n            }\n            .chat-input input[type="text"] {\n              padding: 12px;\n              font-size: 16px;\n            }\n            .chat-input button {\n              padding: 12px 20px;\n              font-size: 16px;\n              min-height: 44px;\n            }\n            .chat-input label {\n              padding: 12px 16px;\n              min-height: 44px;\n              display: flex;\n              align-items: center;\n            }\n          }\n        `,i=document.createElement("style");i.type="text/css",i.textContent=n,document.head.appendChild(i)}renderBubble(){const e=document.createElement("div");if(e.className="chat-bubble",this.style.bubbleIconImage){const t=document.createElement("img");t.src=this.style.bubbleIconImage,t.alt="Chat",t.className="chat-bubble-icon-image",e.appendChild(t)}else e.innerHTML=`<span class="chat-bubble-icon">${this.style.bubbleIcon}</span>`;e.addEventListener("click",()=>this.renderChatWindow()),this.target.appendChild(e)}async renderChatWindow(){this.target.innerHTML="",this.conversationId||await this.initializeConversation();const e=document.createElement("div");e.className="chat-container";const t=document.createElement("div");t.className="chat-header";const n=document.createElement("button");n.textContent="âž–",n.title=this.phrases.minimize,n.addEventListener("click",()=>{this.target.innerHTML="",this.renderBubble()});const i=document.createElement("button");i.textContent="âœ–",i.title=this.phrases.close,i.addEventListener("click",()=>{confirm("Are you sure you want to close the chat? The conversation will be lost.")&&(this.ws&&(this.ws.close(),this.ws=null),this.messages=[],this.conversationId=null,this.cookiesEnabled&&this.deleteCookie(`chatbot_${this.id}_session`),this.target.innerHTML="",this.renderBubble())});const s=document.createElement("button");s.textContent="ðŸ”¼",s.title=this.phrases.maximize,s.addEventListener("click",()=>{this.isMaximized=!this.isMaximized,s.textContent=this.isMaximized?"ðŸ”½":"ðŸ”¼",s.title=this.isMaximized?this.phrases.restore:this.phrases.maximize,e.classList.toggle("maximized"),this.isMobile&&e.classList.toggle("mobile")});const o=document.createElement("button");o.textContent="ðŸ”—",o.title="Share Conversation",o.addEventListener("click",()=>this.copyConversationURL()),t.appendChild(n),t.appendChild(s),t.appendChild(i),t.appendChild(o);const a=this.createChatBody(),r=this.createChatInput();e.appendChild(t),e.appendChild(a),e.appendChild(r),this.target.appendChild(e),this.messages.length>0?this.messages.forEach(e=>{this.addMessage(e.content,e.sender,!1)}):this.config.welcomeMessage&&this.addMessage(this.config.welcomeMessage,"bot",!0)}createChatBody(){const e=document.createElement("div");return e.className="chat-body",e}createChatInput(){const e=document.createElement("div");e.className="chat-input";const t=document.createElement("input");t.type="text",t.placeholder=this.phrases.ph;const n=document.createElement("input");n.type="file",n.id="fileInput";const i=document.createElement("label");i.textContent="ðŸ“Ž",i.title=this.phrases.attach,i.htmlFor="fileInput",n.addEventListener("change",()=>{const e=n.files[0];e&&(this.addMessage(`ðŸ“Ž ${this.phrases.file}: ${e.name}`,"user"),this.files[e.name]=e,n.value="")});const s=document.createElement("button");return s.textContent=this.phrases.send,s.title=this.phrases.send,s.addEventListener("click",()=>{const e=t.value.trim();e&&(this.addMessage(e,"user"),t.value="")}),t.addEventListener("keydown",e=>{if("Enter"===e.key){const e=t.value.trim();e&&(this.addMessage(e,"user"),t.value="")}}),e.appendChild(t),e.appendChild(n),e.appendChild(i),e.appendChild(s),e}async renderEmbed(){this.target.innerHTML="";const e=document.createElement("div");e.className="chat-container";const t=this.createChatBody();t.classList.add("embed");const n=this.createChatInput();e.appendChild(t),e.appendChild(n),this.target.appendChild(e),await this.initializeConversation()}addMessage(e,t,n=!0){const i=this.target.querySelector(".chat-body");if(!i)return;const s=document.createElement("div");if(s.className=`chat-message ${t}`,s.textContent=e,i.appendChild(s),i.scrollTop=i.scrollHeight,n&&(this.messages.push({content:e,sender:t}),this.cookiesEnabled&&this.config.autoSaveSession&&this.conversationId&&this.updateLastMessageTime()),"user"===t)if(this.ws&&this.ws.readyState===WebSocket.OPEN&&this.conversationId){const t={message:e,session_id:this.conversationId};this.ws.send(JSON.stringify(t))}else console.error("WebSocket is not open or no session ID")}async initializeConversation(){try{this.config.enableCookies?this.config.askForCookies&&!this.cookiesEnabled?await this.askForCookiePermission():this.config.askForCookies||(this.cookiesEnabled=!0):this.cookiesEnabled=!1;const e=this.getConversationIdFromURL();if(e)return this.conversationId=e,void this.initializeWebSocket();if(this.cookiesEnabled&&(this.sessionData=this.loadSessionData(),this.sessionData))return this.sessionData.conversationId,this.conversationId=this.sessionData.conversationId,this.config.enableViewHistory&&this.sessionData.messages&&this.sessionData.messages.length>0&&(this.messages=this.sessionData.messages,this.messages.forEach(e=>{this.addMessage(e.content,e.sender,!1)})),void this.initializeWebSocket();await this.startNewConversation()}catch(e){console.error("Failed to initialize conversation:",e),await this.startNewConversation()}}async startNewConversation(){try{const e=await fetch(`${this.server}/api/v1/public/${this.assistant}/start_chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:"Hello"})});if(!e.ok)throw new Error(`Failed to start conversation: ${e.statusText}`);const t=await e.json();this.conversationId=t.session_id,this.conversationId,this.addMessage(t.response,"bot",!1),this.cookiesEnabled&&this.config.autoSaveSession&&this.saveSessionData(),this.initializeWebSocket()}catch(e){console.error("Failed to start new conversation:",e),this.initializeWebSocket()}}triggerLoadingBubble(){this.loadingTimeout&&clearTimeout(this.loadingTimeout),this.loadingTimeout=setTimeout(()=>{this.addLoadingBubble()},3e3)}addLoadingBubble(){const e=this.target.querySelector(".chat-body");if(!e)return;if(e.querySelector(".chat-loading"))return;const t=document.createElement("div");t.className="chat-loading",t.textContent="Thinking",e.appendChild(t),e.scrollTop=e.scrollHeight}resetLoadingBubble(){const e=this.target.querySelector(".chat-body");if(!e)return;const t=e.querySelector(".chat-loading");t&&e.removeChild(t),this.loadingTimeout&&(clearTimeout(this.loadingTimeout),this.loadingTimeout=null)}setCookie(e,t,n=10080){try{const i=new Date;return i.setTime(i.getTime()+60*n*1e3),document.cookie=`${e}=${t};expires=${i.toUTCString()};path=/`,this.cookiesEnabled=!0,!0}catch(e){return console.warn("Cookies not supported:",e),this.cookiesEnabled=!1,!1}}getCookie(e){try{const t=e+"=",n=document.cookie.split(";");for(let e=0;e<n.length;e++){let i=n[e];for(;" "===i.charAt(0);)i=i.substring(1,i.length);if(0===i.indexOf(t))return this.cookiesEnabled=!0,i.substring(t.length,i.length)}return null}catch(e){return console.warn("Cookies not accessible:",e),this.cookiesEnabled=!1,null}}deleteCookie(e){try{return document.cookie=`${e}=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;`,!0}catch(e){return console.warn("Could not delete cookie:",e),!1}}saveSessionData(){if(!this.cookiesEnabled||!this.conversationId||!this.config.autoSaveSession)return!1;const e={conversationId:this.conversationId,startTime:Date.now(),lastMessageTime:Date.now(),assistant:this.assistant,messages:this.config.enableViewHistory?this.messages.slice(-this.config.maxStoredMessages):[]};return this.setCookie(`chatbot_${this.id}_session`,JSON.stringify(e),this.config.cookieExpiryMinutes)}loadSessionData(){const e=this.getCookie(`chatbot_${this.id}_session`);if(!e)return null;try{const t=JSON.parse(e);return Date.now()-t.startTime>60*this.config.sessionExpiryMinutes*1e3||t.assistant!==this.assistant?(this.deleteCookie(`chatbot_${this.id}_session`),null):t}catch(e){return console.warn("Invalid session data in cookie:",e),this.deleteCookie(`chatbot_${this.id}_session`),null}}updateLastMessageTime(){if(!this.cookiesEnabled||!this.conversationId||!this.config.autoSaveSession)return;const e=this.getCookie(`chatbot_${this.id}_session`);if(e)try{const t=JSON.parse(e);t.lastMessageTime=Date.now(),t.messages=this.config.enableViewHistory?this.messages.slice(-this.config.maxStoredMessages):[],this.setCookie(`chatbot_${this.id}_session`,JSON.stringify(t),this.config.cookieExpiryMinutes)}catch(e){console.warn("Could not update session data:",e)}}getConversationIdFromURL(){return new URLSearchParams(window.location.search).get("conversation_id")}askForCookiePermission(){return new Promise(e=>{const t=document.createElement("div");t.className="cookie-permission-dialog",t.innerHTML='\n        <div class="cookie-dialog-content">\n          <h3>Enable Chat History</h3>\n          <p>Would you like to enable cookies to save your chat history? This will allow you to continue conversations even after closing your browser.</p>\n          <div class="cookie-buttons">\n            <button class="cookie-accept">Accept</button>\n            <button class="cookie-decline">Decline</button>\n          </div>\n        </div>\n      ';const n=`\n        .cookie-permission-dialog {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 10000;\n        }\n        .cookie-dialog-content {\n          background: white;\n          padding: 20px;\n          border-radius: 10px;\n          max-width: 400px;\n          text-align: center;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n        }\n        .cookie-buttons {\n          display: flex;\n          gap: 10px;\n          justify-content: center;\n          margin-top: 20px;\n        }\n        .cookie-buttons button {\n          padding: 10px 20px;\n          border: none;\n          border-radius: 5px;\n          cursor: pointer;\n          font-size: 14px;\n        }\n        .cookie-accept {\n          background-color: ${this.style.color};\n          color: white;\n        }\n        .cookie-decline {\n          background-color: #e1e1e1;\n          color: #333;\n        }\n      `,i=document.createElement("style");i.type="text/css",i.textContent=n,document.head.appendChild(i),document.body.appendChild(t),t.querySelector(".cookie-accept").addEventListener("click",()=>{document.body.removeChild(t),this.cookiesEnabled=!0,e(!0)}),t.querySelector(".cookie-decline").addEventListener("click",()=>{document.body.removeChild(t),this.cookiesEnabled=!1,e(!1)})})}initializeWebSocket(){this.ws&&this.ws.close();const e=this.server.replace("http://","ws://").replace("https://","wss://");this.ws=new WebSocket(`${e}/api/v1/public/${this.assistant}/ws`),this.ws.onopen=()=>{},this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);"message"===t.type?this.addMessage(t.content,"user"===t.role?"user":"bot",!1):"error"===t.type?(console.error("WebSocket error:",t.content),this.addMessage(`Error: ${t.content}`,"bot",!1)):t.response&&(this.addMessage(t.response,"bot",!1),this.cookiesEnabled&&this.conversationId&&!this.sessionData&&this.saveSessionData())}catch(t){this.addMessage(e.data,"bot")}},this.ws.onclose=()=>{},this.ws.onerror=e=>{console.error("WebSocket error:",e)},document.addEventListener("visibilitychange",()=>{document.hidden&&this.cookiesEnabled&&this.conversationId&&this.saveSessionData()}),window.addEventListener("beforeunload",()=>{this.cookiesEnabled&&this.conversationId&&this.saveSessionData()})}generateShareableURL(){if(!this.conversationId)return null;const e=new URL(window.location.href);return e.searchParams.set("conversation_id",this.conversationId),e.toString()}async copyConversationURL(){const e=this.generateShareableURL();if(e)try{await navigator.clipboard.writeText(e),alert("Conversation URL copied to clipboard!")}catch(t){const n=document.createElement("textarea");n.value=e,document.body.appendChild(n),n.select(),document.execCommand("copy"),document.body.removeChild(n),alert("Conversation URL copied to clipboard!")}else alert("No conversation to share")}detectMobile(){return[/Android/i,/webOS/i,/iPhone/i,/iPad/i,/iPod/i,/BlackBerry/i,/Windows Phone/i].some(e=>navigator.userAgent.match(e))}}